name: linux-eic-shell

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
  schedule:
    - cron: '41 4 * * 0'

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: cvmfs-contrib/github-action-cvmfs@v5
    - uses: eic/run-cvmfs-osg-eic-shell@main
      with:
        platform-release: "eic_xl:nightly"
        run: |
          PREFIX=${PWD}/install
          cmake -B build -S . -DCMAKE_INSTALL_PREFIX=${PREFIX}
          cmake --build build -- install
    - uses: actions/upload-artifact@v4
      with:
        name: build-eic-shell
        path: build/
        if-no-files-found: error
    - uses: actions/upload-artifact@v4
      with:
        name: install-eic-shell
        path: install/
        if-no-files-found: error

  trigger-container:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'merge_group' && github.event_name != 'schedule' && github.actor != 'dependabot[bot]' }}
    needs:
    - build-test
    steps:
    - uses: eic/trigger-gitlab-ci@v3
      id: trigger
      with:
        url: https://eicweb.phy.anl.gov
        project_id: 290
        token: ${{ secrets.EICWEB_CONTAINER_TRIGGER }}
        ref_name: master
        variables: |
          GITHUB_REPOSITORY=${{ github.repository }}
          GITHUB_SHA=${{ github.event.pull_request.head.sha || github.sha }}
          GITHUB_PR=${{ github.event.pull_request.number }}
          EDM4EIC_VERSION="${{ github.event.pull_request.head.ref || github.ref_name }}"
          PIPELINE_NAME=${{ github.repository }}: ${{ github.event.pull_request.title || github.ref_name }}
    - run: |
        gh api \
           --method POST \
          -H "Accept: application/vnd.github+json" \
          /repos/${{ github.repository }}/statuses/${{ github.event.pull_request.head.sha || github.sha }} \
          -f state="pending" \
          -f target_url="${{ steps.trigger.outputs.web_url }}" \
          -f description="Triggered... $(TZ=America/New_York date)" \
          -f context="eicweb/eic_container"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-docs:
    runs-on: ubuntu-latest
    needs: build-test
    container:
      image: alpine:latest
      volumes:
      - /home/runner/work/_temp:/home/runner/work/_temp
      # FIXME hard-coded: see https://github.com/actions/upload-pages-artifact/pull/14
    steps:
    - uses: actions/checkout@v5
    - uses: actions/download-artifact@v4
      with:
        name: build-eic-shell
        path: build/
    - run: |
        apk add doxygen graphviz
        doxygen build/Doxyfile
    - uses: actions/upload-artifact@v4
      with:
        name: docs-eic-shell
        path: build/docs/html/
        if-no-files-found: error
    - run: |
        apk add tar bash
        # FIXME bash not really required: see https://github.com/actions/upload-pages-artifact/pull/14
    - uses: actions/upload-pages-artifact@v3
      if: github.ref == 'refs/heads/main'
      with:
        path: build/docs/html/
        retention-days: 7

  deploy-docs:
    needs: build-docs
    if: github.ref == 'refs/heads/main'
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
